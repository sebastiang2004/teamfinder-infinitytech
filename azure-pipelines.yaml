pool: 'default'

variables:
  node.version: '20.x'
  projectRoot: '.'

jobs:
  - job: deploy
    displayName: 'Deploy'
    variables:
      - group: 'infinitytech-variables'
    steps:
      - task: NodeTool@0
        displayName: 'Use Node.js $(node.version)'
        inputs:
          versionSpec: '$(node.version)'

      - script: |
          npm install
        workingDirectory: $(projectRoot)
        displayName: "Install dependencies and build project"
      
      - script: |
          echo "GITHUB_CLIENT_ID=$(GITHUB_CLIENT_ID)" >> .env
          echo "GITHUB_CLIENT_SECRET=$(GITHUB_CLIENT_SECRET)" >> .env
          echo "GOOGLE_CLIENT_ID=$(GOOGLE_CLIENT_ID)" >> .env
          echo "GOOGLE_CLIENT_SECRET=$(GOOGLE_CLIENT_SECRET)" >> .env
          echo "JWT_SECRET=$(JWT_SECRET)" >> .env
          echo "LINKEDIN_CLIENT_ID=$(LINKEDIN_CLIENT_ID)" >> .env
          echo "LINKEDIN_CLIENT_SECRET=$(LINKEDIN_CLIENT_SECRET)" >> .env
          echo "MONGO_URI=$(MONGO_URI)" >> .env
        workingDirectory: $(projectRoot)
        displayName: "Create env file"
      
      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(projectRoot)'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          replaceExistingArchive: true
      
      - task: AzureWebApp@1
        displayName: 'Deploy Azure Web App'
        inputs:
          azureSubscription: 'infinitytech-service-connection'
          appType: 'webAppLinux'
          appName: "atc-2024-infinitytech-be-linux-web-app"
          package: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          startUpCommand: 'npm start'
